# {{ ansible_managed }}
---
version: "{{ docker_compose.version | default('3') }}"
services:
{% for container in docker_compose.containers %}
  {{ container.service_name }}:
{% if container.build is defined %}
{% if container.build is string %}
    build: {{ container.build }}
{% else %}
    build:
        context: {{ container.build.context }}
        {% if container.build.dockerfile is defined %}
        dockerfile: {{ container.build.dockerfile }}
        {% endif %}
        {% if container.build.args is defined %}
        args:
            {% for param, value in container.build.args.items() %}
            {{ param }}: {{ value }}
            {% endfor %}
        {% endif %}
{% endif %}
{% endif %}
{% if container.image is defined %}
    image: {{ container.image }}
{% endif %}
{% if container.container_name is defined %}
    container_name: {{ container.container_name}}
{% endif %}
{% if container.extra_hosts is defined %}
    extra_hosts:
{% for host in container.extra_hosts %}
      - {{ host }}
{% endfor %}
{% endif %}
{% if container.user is defined %}
    user: {{ container.user }}
{% endif %}
{% if container.network_mode is defined %}
    network_mode: {{ container.network_mode }}
{% endif %}
{% if container.cap_add is defined %}
    cap_add: 
{% for cap in container.cap_add %}
      - {{ cap }}
{% endfor %}
{% endif %}
{% if container.devices is defined %}
    devices:
{% for device in container.devices %}
      - {{ device }}
{% endfor %}
{% endif %}
{% if container.volumes is defined %}
    volumes:
{% for volume in container.volumes %}
      - {{ volume }}
{% endfor %}
{% endif %}
{% if container.ports is defined %}
    ports:
{% for port in container.ports %}
      - {{ port }}
{% endfor %}
{% endif %}
{% if ( container.environment is defined ) or ( container.include_global_env_vars is defined and container.include_global_env_vars) %}
    environment:
{% if container.include_global_env_vars | default(false) %}
{% for global_var in global_env_vars %}
      - {{ global_var }}
{% endfor %}
{% endif %}
{% if container.environment is defined %}
{% for env_var in container.environment %}
      - {{ env_var }}
{% endfor %}
{% endif %}
{% endif %}
{% if container.depends_on is defined %}
    depends_on:
{% for dependent in container.depends_on %}
      - {{ dependent }}
{% endfor %}
{% endif %}
{% if container.hostname is defined %}
    hostname: {{ container.hostname }}
{% endif %}
{% if container.command is defined %}
{% if container.command is string %}
    command: {{ container.command }}
{% else %}
    command:
{% for command in container.command %}
      - {{ command }}
{% endfor %}
{% endif %}
{% endif %}
{% if container.entrypoint is defined %}
{% if container.entrypoint is string %}
    entrypoint: {{ container.entrypoint }}
{% else %}
    enctrypoint:
{% for entrypoint in container.entrypoint %}
      - {{ entrypoint }}
{% endfor %}
{% endif %}
{% endif %}
{% if container.healthcheck is defined %}
    healthcheck:
{% if container.healthcheck.test is defined %}
        test: {{ container.healthcheck.test }}
{% endif %}
{% if container.healthcheck.interval is defined %}
        interval: {{ container.healthcheck.interval }}
{% endif %}
{% if container.healthcheck.timeout is defined %}
        timeout: {{ container.healthcheck.timeout }}
{% endif %}
{% if container.healthcheck.retries is defined %}
        retries: {{ container.healthcheck.retries }}
{% endif %}
{% if container.healthcheck.start_period is defined %}
        start_period: {{ container.healthcheck.start_period }}
{% endif %}
{% if container.healthcheck.disable is defined %}
        disable: {{ container.healthcheck.disable }}
{% endif %}
{% endif %}
{% if container.security_opt is defined %}
    security_opt:
{% for sec_opt in container.security_opt %}
      - {{ sec_opt }}
{% endfor %}
{% endif %}
{% if container.sysctl is defined %}
    sysctls:
{% for param in container.sysctl %}
      - {{ param }}
{% endfor %}
{% endif %}
{% if container.ulimits is defined %}
    ulimits:
{% if container.ulimits.nproc is defined %}
      nproc: {{ container.ulimits.nproc }}
{% endif %}
{% if container.ulimits.nofile is defined %}
      nofile:
{% for param, value in container.ulimits.nofile.items() %}
        {{ param }}: {{ value }}
{% endfor %}
{% endif %}
{% endif %}
{% if container.tmpfs is defined %}
    tmpfs:
{% for item in container.tmpfs %}
      - {{ item }}
{% endfor %}
{% endif %}
{% if container.dns is defined %}
    dns:
{% for dns_entry in container.dns %}
      - {{ dns_entry }}
{% endfor %}
{% endif %}
{% if container.logging.driver is defined %}
    logging:
      driver: {{ container.logging.driver }}
{% if container.logging.options is defined %}
      options:
{% for option in container.logging.options %}
        {{ option }}: {{ container.logging.options[option] }}
{% endfor %}
{% endif %}
{% endif %}
{% if container.labels is defined %}
    labels:
{% for label in container.labels %}
      - {{ label }}
{% endfor %}
{% endif %}
{% if container.networks is defined %}
    networks:
{% for network in container.networks %}
        {{ network }}:
{% endfor %}
{% endif %}
{% if container.env_file is defined %}
    env_file:
{% for envfile in container.env_file %}
      - {{ envfile }}
{% endfor %}
{% endif %}
{% if container.restart is defined %}
    restart: {{ container.restart }}
{% endif %}

{% endfor %}
{% if container.networks is defined %}
networks:
{% for network in container.networks %}
    {{ network }}:
{% if network.external is defined %}
        external: {{ network.external }}
{% endif %}
{% if network.name is defined %}
        name: {{ network.name }}
{% endif %}
{% if network.internal is defined %}
        internal: {{ network.internal }}
{% endif %}
{% if network.internal is defined %}
        internal: {{ network.internal }}
{% endif %}
{% endfor %}
{% endif %}
{% if docker_compose.volumes is defined %}
volumes:
{% for volume in docker_compose.volumes %}
{% if volume is string %}
    {{ volume }}:
{% else %}
    {{ volume.name }}:
{% if volume.external is defined %}
        external: {{ volume.external }}
{% endif %}
{% if volume.driver_opts is defined %}
        driver_opts:
{% if volume.driver_opts.type is defined %}
            type: {{ volume.driver_opts.type }}
{% endif %}
{% if volume.driver_opts.o is defined %}
            o: {{ volume.driver_opts.o }}
{% endif %}
{% if volume.driver_opts.device is defined %}
            device: {{ volume.driver_opts.device }}
{% endif %}
{% endif %}
{% endif %}
{% endfor %}
{% endif %}
